<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.adminstore">

	<select id="getContent" resultType="com.web.f5.vo.AdminStoreVO">
		select storeidx,sfile1,sfile2,sfile3,sfile4,sfile5,sufile1,sufile2,sufile3,sufile4,sufile5,
        		storename,storeplace,storecontent,storetel,storeevent,storebenefit,storecategory,
        		storemaxcount,storeparking,storewebsite,storeprice,storedate
		from
			(select s1.storeidx,sfile1,sfile2,sfile3,sfile4,sfile5,sufile1,sufile2,sufile3,sufile4,sufile5,
        	storename,storeplace,storecontent,storetel,storeevent,storebenefit,storecategory,
        	storemaxcount,storeparking,storewebsite,storeprice,storedate from store s1, storefile s2
		where
			s1.storeidx = s2.storeidx(+)) where storeidx = #{storeIdx}
	</select>
	
	<select id="list" parameterType="map" resultType="com.web.f5.vo.AdminStoreVO">
		select 
			rno, storeidx,sfile1,sfile2,sfile3,sfile4,sfile5,sufile1,sufile2,sufile3,sufile4,sufile5,
        		storename,storeplace,storecontent,storetel,storeevent,storebenefit,storecategory,
        		storemaxcount,storeparking,storewebsite,storeprice,storedate,memberId
		 from
		(select
			rownum rno, s1.storeidx,sfile1,sfile2,sfile3,sfile4,sfile5,sufile1,sufile2,sufile3,sufile4,sufile5,
        	storename,storeplace,storecontent,storetel,storeevent,storebenefit,storecategory,
        	storemaxcount,storeparking,storewebsite,storeprice,storedate,s3.memberId from store s1, storefile s2, ceo s3
			where s1.storeidx = s2.storeidx(+) and s1.storeIdx = s3.storeIdx)
		where
			rno between #{start} and #{end}
	</select>
	
	<select id="getSearchList" parameterType="map" resultType="com.web.f5.vo.AdminStoreVO">
		select 
			rno, storeidx,sfile1,sfile2,sfile3,sfile4,sfile5,sufile1,sufile2,sufile3,sufile4,sufile5,
        		storename,storeplace,storecontent,storetel,storeevent,storebenefit,storecategory,
        		storemaxcount,storeparking,storewebsite,storeprice,storedate
		 from
		(select
			rownum rno, s1.storeidx,sfile1,sfile2,sfile3,sfile4,sfile5,sufile1,sufile2,sufile3,sufile4,sufile5,
        	storename,storeplace,storecontent,storetel,storeevent,storebenefit,storecategory,
        	storemaxcount,storeparking,storewebsite,storeprice,storedate from store s1, storefile s2
			where s1.storeidx = s2.storeidx(+)
			<choose>
				<when test='search_type == "t"'>
					where
						storeName like '%'||#{search}||'%'					
				</when>
				<when test='search_type == "c"'>
					where
						storeContent like '%'||#{search}||'%'					
				</when>
				<when test='search_type == "tc"'>
					where
						(
							storeName like '%'||#{search}||'%'					
						or
							storeContent like '%'||#{search}||'%'					
						)
				</when>
				<when test='search_type == "category"'>
					where
						storeCategory like '%'||#{search}||'%'
				</when>
				<when test='search_type == "p"'>
					where
						storePlace like '%'||#{search}||'%'					
				</when>
				<otherwise>
				</otherwise>
			</choose>
			)
		where
			rno between #{start} and #{end}
	</select>
	
	<select id="count" resultType="int">
		select count(*) from store
	</select>
	
	<select id="getMaxCount" parameterType="java.lang.String" resultType="com.web.f5.vo.AdminStoreVO">
		select storeMaxCount from store where storeIdx = #{storeIdx}
	</select>
	
	<select id="selectStoreIdx" resultType="java.lang.String">
		select storeidx from
			(select rownum rno,storeidx
			from
				(select storeidx from store order by storedate desc))
		 where rno = 1
	</select>
	
	<select id="getReviewCount" resultType="int" parameterType="java.lang.String">
		select count(*)
		from review
		where
			storeIdx = #{storeIdx}
	</select>
	
	<select id="getReview" resultType="com.web.f5.vo.ReviewVO" parameterType="map">
		select rno,reviewIdx,storeIdx,memberId,reviewContent,reviewScore
		from (select 
			rownum rno,reviewIdx,storeIdx,memberId,reviewContent,reviewScore
		 from (select
			 reviewIdx,storeIdx,memberId,reviewContent,reviewScore from review
             where storeIdx = #{storeIdx}
             order by reviewIdx desc
             ))
		 where rno between #{start} and #{end}
	</select>
	
	<delete id="getReviewDelete" parameterType="java.lang.String">
		delete from review
		where
			reviewIdx = #{reviewIdx}
	</delete>
	
	<delete id="getStoreDelete" parameterType="java.lang.String">
		delete from store
		where
			storeIdx = #{storeIdx}
	</delete>
	
</mapper>

